{"version":3,"sources":["components/Details/styles.js","context/contextReducer.js","context/context.js","constants/categories.js","useTransactions.js","components/Details/Details.js","components/Main/styles.js","utils/formatDate.js","components/Main/Form/styles.js","components/Snackbar/styles.js","components/Snackbar/Snackbar.js","components/Main/Form/Form.js","components/Main/List/styles.js","components/Main/List/List.js","components/Main/Main.js","styles.js","App.js","index.js"],"names":["makeStyles","income","borderBottom","expense","contextReducer","state","action","transactions","type","filter","transaction","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","rightTransactions","useContext","t","total","categories","category","find","filteredCategories","sc","chartData","datasets","data","map","backgroundColor","labels","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cardContent","divider","margin","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","radioGroup","display","justifyContent","marginBottom","button","marginTop","root","width","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","e","charAt","slice","toLowerCase","iC","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","key","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","ExpenseTracker","subheader","style","lineHeight","Divider","cartContent","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","sm","ref","Main","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.7432bcf0.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n  income: {\r\n    borderBottom: \"10px solid rgba(0,255,0,0.5)\",\r\n  },\r\n  expense: {\r\n    borderBottom: \"10px solid rgba(255,0,0,0.5)\",\r\n  },\r\n}));\r\n","const contextReducer = (state, action) => {\r\n  let transactions;\r\n\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      transactions = state.filter(\r\n        (transaction) => transaction.id !== action.payload\r\n      );\r\n\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n      \r\n\r\n      return transactions;\r\n    case \"ADD_TRANSACTION\":\r\n      transactions = [action.payload, ...state];\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n\r\n      return transactions;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contextReducer;\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport contextReducer from \"./contextReducer\";\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(\"transactions\")) || [];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({ children }) => {\r\n  const [transactions, dispatch] = useReducer(contextReducer, initialState);\r\n\r\n  const deleteTransaction = (id) => {\r\n    dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({ type: \"ADD_TRANSACTION\", payload: transaction });\r\n  };\r\n\r\n  const balance = transactions.reduce((acc, currVal) => {\r\n    return currVal.type === \"Expense\"\r\n      ? acc - currVal.amount\r\n      : acc + currVal.amount;\r\n  }, 0);\r\n\r\n  return (\r\n    <ExpenseTrackerContext.Provider\r\n      value={{\r\n        deleteTransaction,\r\n        addTransaction,\r\n        transactions,\r\n        balance,\r\n      }}\r\n    >\r\n      {children}\r\n    </ExpenseTrackerContext.Provider>\r\n  );\r\n};\r\n","const incomeColors = [\r\n  \"#123123\",\r\n  \"#154731\",\r\n  \"#165f40\",\r\n  \"#16784f\",\r\n  \"#14915f\",\r\n  \"#10ac6e\",\r\n  \"#0bc77e\",\r\n  \"#04e38d\",\r\n  \"#00ff9d\",\r\n];\r\nconst expenseColors = [\r\n  \"#b50d12\",\r\n  \"#bf2f1f\",\r\n  \"#c9452c\",\r\n  \"#d3583a\",\r\n  \"#dc6a48\",\r\n  \"#e57c58\",\r\n  \"#ee8d68\",\r\n  \"#f79d79\",\r\n  \"#ffae8a\",\r\n  \"#cc474b\",\r\n  \"#f55b5f\",\r\n];\r\n\r\nexport const incomeCategories = [\r\n  { type: \"Business\", amount: 0, color: incomeColors[0] },\r\n  { type: \"Investments\", amount: 0, color: incomeColors[1] },\r\n  { type: \"Extra income\", amount: 0, color: incomeColors[2] },\r\n  { type: \"Deposits\", amount: 0, color: incomeColors[3] },\r\n  { type: \"Lottery\", amount: 0, color: incomeColors[4] },\r\n  { type: \"Gifts\", amount: 0, color: incomeColors[5] },\r\n  { type: \"Salary\", amount: 0, color: incomeColors[6] },\r\n  { type: \"Savings\", amount: 0, color: incomeColors[7] },\r\n  { type: \"Rental income\", amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: \"Bills\", amount: 0, color: expenseColors[0] },\r\n  { type: \"Car\", amount: 0, color: expenseColors[1] },\r\n  { type: \"Clothes\", amount: 0, color: expenseColors[2] },\r\n  { type: \"Travel\", amount: 0, color: expenseColors[3] },\r\n  { type: \"Food\", amount: 0, color: expenseColors[4] },\r\n  { type: \"Shopping\", amount: 0, color: expenseColors[5] },\r\n  { type: \"House\", amount: 0, color: expenseColors[6] },\r\n  { type: \"Entertainment\", amount: 0, color: expenseColors[7] },\r\n  { type: \"Phone\", amount: 0, color: expenseColors[8] },\r\n  { type: \"Pets\", amount: 0, color: expenseColors[9] },\r\n  { type: \"Other\", amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => (c.amount = 0));\r\n  expenseCategories.forEach((c) => (c.amount = 0));\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ExpenseTrackerContext } from \"./context/context\";\r\n\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n  resetCategories,\r\n} from \"./constants/categories\";\r\n\r\nconst useTransactions = (title) => {\r\n  resetCategories();\r\n  const { transactions } = useContext(ExpenseTrackerContext);\r\n  const rightTransactions = transactions.filter((t) => t.type === title);\r\n  const total = rightTransactions.reduce(\r\n    (acc, currVal) => (acc += currVal.amount),\r\n    0\r\n  );\r\n  const categories = title === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  rightTransactions.forEach((t) => {\r\n    const category = categories.find((c) => c.type === t.category);\r\n\r\n    if (category) category.amount += t.amount;\r\n  });\r\n\r\n  const filteredCategories = categories.filter((sc) => sc.amount > 0);\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: filteredCategories.map((c) => c.amount),\r\n        backgroundColor: filteredCategories.map((c) => c.color),\r\n      },\r\n    ],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  };\r\n\r\n  return { filteredCategories, total, chartData };\r\n};\r\n\r\nexport default useTransactions;\r\n","import React from \"react\";\r\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport useStyles from \"./styles\";\r\nimport useTransactions from \"../../useTransactions\";\r\n\r\nconst Details = ({ title }) => {\r\n  const classes = useStyles();\r\n  const { total, chartData } = useTransactions(title);\r\n\r\n  return (\r\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\r\n      <CardHeader title={title} />\r\n      <CardContent>\r\n        <Typography variant=\"h5\">${total}</Typography>\r\n        <Doughnut data={chartData} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  cardContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: \"20px 0\",\r\n  },\r\n}));\r\n","const formatDate = (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = `${d.getFullYear()}`;\r\n\r\n  if (month.length < 2) {\r\n    month = `0${month}`;\r\n  }\r\n\r\n  if (day.length < 2) {\r\n    day = `0${day}`;\r\n  }\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\nexport default formatDate;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"-10px\",\r\n  },\r\n  button: {\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport SnackBar from \"@material-ui/core/Snackbar\";\r\nimport MUIAlert from \"@material-ui/lab/Alert\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst CustomizedSnackbar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") return;\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"classes.root\">\r\n      <SnackBar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <MUIAlert\r\n          onClose={handleClose}\r\n          severity=\"success\"\r\n          elevation={6}\r\n          variant=\"filled\"\r\n        >\r\n          Transaction Successfully created.\r\n        </MUIAlert>\r\n      </SnackBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbar;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\nimport CustomizedSnackbar from \"../../Snackbar/Snackbar\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n    setOpen(true);\r\n    addTransaction(transaction);\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((e) => {\r\n        const category = `${e.value.charAt(0)}${e.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n        switch (e.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: e.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: e.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && segment.words.map((w) => w.value).join(\" \")};\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: \"150px\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  List as MUIList,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { Delete, MoneyOff } from \"@material-ui/icons\";\r\nimport useStyles from \"./styles\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\n\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <MUIList dense={false} className={classes.list}>\r\n      {transactions.map((transaction) => (\r\n        <Slide\r\n          direction=\"down\"\r\n          in\r\n          mountOnEnter\r\n          unmountOnExit\r\n          key={transaction.id}\r\n        >\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                className={\r\n                  transaction.type === \"Income\"\r\n                    ? classes.avatarIncome\r\n                    : classes.avatarExpense\r\n                }\r\n              >\r\n                <MoneyOff />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={transaction.category}\r\n              secondary={`$${transaction.amount} - ${transaction.date}`}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"delete\"\r\n                onClick={() => deleteTransaction(transaction.id)}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </Slide>\r\n      ))}\r\n    </MUIList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { ExpenseTrackerContext } from \"../../context/context\";\r\nimport useStyles from \"./styles\";\r\nimport Form from \"./Form/Form\";\r\nimport List from \"./List/List\";\r\n// import InfoCard from \"../InfoCard\";\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Total Balance ${balance}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          style={{ lineHeight: \"1.5em\", marginTop: \"20px\" }}\r\n        ></Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingBottom: \"5%\",\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: \"200px\",\r\n    },\r\n  },\r\n  grid: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n","import React, { useRef, useEffect } from \"react\";\nimport Details from \"./components/Details/Details\";\nimport Main from \"./components/Main/Main\";\nimport { Grid } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport {\n  PushToTalkButton,\n  PushToTalkButtonContainer,\n  ErrorPanel,\n} from \"@speechly/react-ui\";\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\n\nconst App = () => {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null);\n\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, []);\n  return (\n    <div>\n      <Grid\n        className={classes.grid}\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Grid item xs={12} sm={3} className={classes.mobile}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n          <Main />\n        </Grid>\n        <Grid item xs={12} sm={3} className={classes.desktop}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Details title=\"Expense\" />\n        </Grid>\n      </Grid>\n      <PushToTalkButtonContainer>\n        <PushToTalkButton />\n        <ErrorPanel />\n      </PushToTalkButtonContainer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { SpeechProvider } from \"@speechly/react-client\";\n\nimport { Provider } from \"./context/context\";\n\nReactDOM.render(\n  <SpeechProvider appId=\"3f1e084d-9b60-45cd-804f-947aec0a91c0\" language=\"en-US\">\n    <Provider>\n      <App />\n    </Provider>\n  </SpeechProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}