[{"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\index.js":"1","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\styles.js":"2","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\App.js":"3","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Details\\Details.js":"4","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Details\\styles.js":"5","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\Main.js":"6","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\styles.js":"7","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\Form\\Form.js":"8","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\Form\\styles.js":"9","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\List\\List.js":"10","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\List\\styles.js":"11","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\context\\context.js":"12","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\context\\contextReducer.js":"13","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\constants\\categories.js":"14","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\utils\\formatDate.js":"15","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\useTransactions.js":"16","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Snackbar\\Snackbar.js":"17","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Snackbar\\styles.js":"18"},{"size":414,"mtime":1610313841980,"results":"19","hashOfConfig":"20"},{"size":582,"mtime":1610298415161,"results":"21","hashOfConfig":"20"},{"size":1494,"mtime":1610321239068,"results":"22","hashOfConfig":"20"},{"size":682,"mtime":1610310873784,"results":"23","hashOfConfig":"20"},{"size":234,"mtime":1610297924726,"results":"24","hashOfConfig":"20"},{"size":1233,"mtime":1610321027645,"results":"25","hashOfConfig":"20"},{"size":514,"mtime":1610317922856,"results":"26","hashOfConfig":"20"},{"size":5152,"mtime":1610318444592,"results":"27","hashOfConfig":"20"},{"size":247,"mtime":1610300465422,"results":"28","hashOfConfig":"20"},{"size":1715,"mtime":1610308834459,"results":"29","hashOfConfig":"20"},{"size":416,"mtime":1610302809474,"results":"30","hashOfConfig":"20"},{"size":1023,"mtime":1610316953153,"results":"31","hashOfConfig":"20"},{"size":609,"mtime":1610315782252,"results":"32","hashOfConfig":"20"},{"size":1765,"mtime":1610308948407,"results":"33","hashOfConfig":"20"},{"size":356,"mtime":1610311203847,"results":"34","hashOfConfig":"20"},{"size":1173,"mtime":1610311105014,"results":"35","hashOfConfig":"20"},{"size":877,"mtime":1610321335480,"results":"36","hashOfConfig":"20"},{"size":206,"mtime":1610321318092,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"j1kvg8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\index.js",[],["79","80"],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\styles.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\App.js",["81"],"import React, { useRef, useEffect } from \"react\";\nimport Details from \"./components/Details/Details\";\nimport Main from \"./components/Main/Main\";\nimport { Grid } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport {\n  PushToTalkButton,\n  PushToTalkButtonContainer,\n  ErrorPanel,\n} from \"@speechly/react-ui\";\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\n\nconst App = () => {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null);\n\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, []);\n  return (\n    <div>\n      <Grid\n        className={classes.grid}\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Grid item xs={12} sm={3} className={classes.mobile}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n          <Main />\n        </Grid>\n        <Grid item xs={12} sm={3} className={classes.desktop}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Details title=\"Expense\" />\n        </Grid>\n      </Grid>\n      <PushToTalkButtonContainer>\n        <PushToTalkButton />\n        <ErrorPanel />\n      </PushToTalkButtonContainer>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Details\\Details.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Details\\styles.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\Main.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\styles.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\Form\\Form.js",["82"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\nimport CustomizedSnackbar from \"../../Snackbar/Snackbar\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n    setOpen(true);\r\n    addTransaction(transaction);\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((e) => {\r\n        const category = `${e.value.charAt(0)}${e.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n        switch (e.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: e.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: e.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && segment.words.map((w) => w.value).join(\" \")};\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\List\\List.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Main\\List\\styles.js",[],["83","84"],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\context\\context.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\context\\contextReducer.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\constants\\categories.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\utils\\formatDate.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\useTransactions.js",[],"C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Snackbar\\Snackbar.js",["85"],"import React from \"react\";\r\nimport SnackBar from \"@material-ui/core/Snackbar\";\r\nimport MUIAlert from \"@material-ui/lab/Alert\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst CustomizedSnackbar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") return;\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"classes.root\">\r\n      <SnackBar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <MUIAlert\r\n          onClose={handleClose}\r\n          severity=\"success\"\r\n          elevation={6}\r\n          variant=\"filled\"\r\n        >\r\n          Transaction Successfully created.\r\n        </MUIAlert>\r\n      </SnackBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbar;\r\n","C:\\Users\\crfri\\Documents\\Web Development\\Projects\\Expense Tracker\\expense-tracker\\src\\components\\Snackbar\\styles.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":24,"column":6,"nodeType":"92","endLine":24,"endColumn":8,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":103,"column":6,"nodeType":"92","endLine":103,"endColumn":15,"suggestions":"95"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":9,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'speechState'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["105"],["102"],["103"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [speechState]",{"range":"110","text":"111"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"112","text":"113"},[687,689],"[speechState]",[2978,2987],"[createTransaction, formData, segment]"]